import { Client } from '@notionhq/client';
import type { GetServerSideProps, NextPage } from 'next';
import Head from 'next/head';
import Image from 'next/image';
import Link from 'next/link';
import { useEffect } from 'react';
import styles from '../styles/Home.module.css';

export const getServerSideProps: GetServerSideProps = async (context) => {
	const notion = new Client({
		auth: process.env.NOTION_API_KEY,
	});
	const myDatabase = await notion.databases.query({
		database_id: '3a28ac5f17214860a01d4af3b3c42dea',
	});
	const database = myDatabase.results.map((page) => {
		if (!('properties' in page)) return;
		const { id, created_time: createdTime, properties, url } = page;
		return {
			id,
			createdTime,
			tag: properties['태그'],
			name: properties['이름'],
			url,
		};
	});

	return {
		props: { database },
	};
};

interface HomeProps {
	database: any[];
}

const Home: NextPage<HomeProps> = ({ database }) => {
	useEffect(() => {
		console.dir(database);
	}, []);
	return (
		<div className={styles.container}>
			<Head>
				<title>Notion TEST</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>

			<main className={styles.main}>
				<h1 className={styles.title}>Notion API TEST</h1>

				<p className={styles.description}>This API get my page of notion!</p>

				<div className={styles.grid}>
					{database?.map(({ id, createdTime, tag, name, url }) => {
						return name?.title[0]?.text ? (
							<div key={id} className={styles.card}>
								<a href={url}>{name?.title[0].text.content}</a>
								<Link href={`posts/${id}`}>{id}</Link>
								<p>{new Date(createdTime).toLocaleString('ko')}</p>
								<div style={{ display: 'flex', gap: '10px', padding: '10px' }}>
									{tag.multi_select.map((item: any) => (
										<span
											className={styles.tag}
											style={{
												backgroundColor: item.color,
												padding: '3px',
												borderRadius: '2px',
												color: 'black',
											}}
											key={item.id}
										>
											{item.name}
										</span>
									))}
								</div>
							</div>
						) : null;
					})}
				</div>
			</main>

			<footer className={styles.footer}>
				<a
					href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
					target="_blank"
					rel="noopener noreferrer"
				>
					Powered by{' '}
					<span className={styles.logo}>
						<Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
					</span>
				</a>
			</footer>
		</div>
	);
};

export default Home;
